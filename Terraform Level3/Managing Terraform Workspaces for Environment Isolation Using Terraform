The DevOps team is tasked with provisioning multiple API Gateway REST APIs and corresponding CloudWatch Log Groups using the following Terraform features:

Create two workspaces named dev and prod.

Create API Gateways named dev-xfusion-api-1 and prod-xfusion-api-2.

Create matching CloudWatch Log Groups named /aws/apigateway/dev-xfusion-api-1 and /aws/apigateway/prod-xfusion-api-2.

Use the count meta-argument to create multiple API Gateway REST APIs and matching log groups.

Leverage terraform workspaces to differentiate API Gateway names per environment.

Use local-exec provisioner to write a confirmation message to a log file once each resource is created.(e.g., Created API Gateway dev-xfusion-api-2 in workspace dev).

Create two different files apigateway.log and loggroups.log in /home/bob/terraform to log the creation of each resource in their respective files.

Use a list variable KKE_API_NAMES to define API names (e.g., ["xfusion-api-1", "xfusion-api-2"]).

Createmain.tf file (do not create a separate .tf file) to provision the api gateway with matching log groups in different workspaces.

Use variables.tf file with the following:

KKE_API_NAMES = Names of API Gateways to create.
Use terraform.tfvars file to input the names of the API Gateways.

Use outputs.tf file to output the following in the two different workspces ( devand prod).

kke_api_gateway_names= name of the api gateway created.
kke_log_group_names= name of the matching logroups created.

Notes:

The Terraform working directory is /home/bob/terraform.

Right-click under the EXPLORER section in VS Code and select Open in Integrated Terminal to launch the terminal.

Before submitting the task, ensure that terraform plan returns No changes. Your infrastructure matches the configuration.

Solutions:-

📁 /home/bob/terraform/main.tf

main.tf

locals {
  env         = terraform.workspace
  api_names   = var.KKE_API_NAMES
  full_names  = [for name in local.api_names : "${local.env}-${name}"]
  log_names   = [for name in local.api_names : "/aws/apigateway/${local.env}-${name}"]
}

resource "aws_api_gateway_rest_api" "kke_api" {
  count = length(local.full_names)
  name  = local.full_names[count.index]

  provisioner "local-exec" {
    command = "echo Created API Gateway ${local.full_names[count.index]} in workspace ${local.env} >> /home/bob/terraform/apigateway.log"
  }
}

resource "aws_cloudwatch_log_group" "kke_log_group" {
  count = length(local.log_names)
  name  = local.log_names[count.index]

  provisioner "local-exec" {
    command = "echo Created Log Group ${local.log_names[count.index]} in workspace ${local.env} >> /home/bob/terraform/loggroups.log"
  }
}



======================================================================================================================================

📁 /home/bob/terraform/variables.tf

variables.tf

variable "KKE_API_NAMES" {
  type        = list(string)
  description = "Names of API Gateways to create"
}

================================================================================================================================

📁 /home/bob/terraform/terraform.tfvars

terraform.tfvars

KKE_API_NAMES = ["xfusion-api-1", "xfusion-api-2"]
===================================================================================================================================

📁 /home/bob/terraform/outputs.tf

outputs.tf

output "kke_api_gateway_names" {
  value = aws_api_gateway_rest_api.kke_api[*].name
}

output "kke_log_group_names" {
  value = aws_cloudwatch_log_group.kke_log_group[*].name
}

=========================================================================================================================

Final Steps

terraform init
terraform workspace new dev
terraform workspace new prod

terraform workspace select dev
terraform apply

terraform workspace select prod
terraform apply
terraform plan
