The Nautilus DevOps team is focusing on improving their data security by using AWS KMS. Your task is to create a KMS key and manage the encryption and decryption of a pre-existing 
sensitive file using the KMS key.

Specific Requirements:

Create a symmetric KMS key named devops-kms-key to manage encryption and decryption.

Encrypt the provided SensitiveData.txt file (located in /home/bob/terraform), base64 encode the ciphertext, and save the encrypted version as EncryptedData.bin in the /home/bob/terraform
directory.

Try to decrypt the same and verify that the decrypted data matches the original file.

Create main.tf file (do not create a separate .tf file) to provision a KMS key, encrypt and decrypt the file.

Create outputs.tf file to output the following:

kke_kms_key_name: name of the key created.

Notes:

The Terraform working directory is /home/bob/terraform.

Right-click under the EXPLORER section in VS Code and select Open in Integrated Terminal to launch the terminal.

Before submitting the task, ensure that terraform plan returns No changes. Your infrastructure matches the configuration.

Solutions:-

**Removing the base64encode function**.

main.tf

# 1. Create a symmetric KMS key
resource "aws_kms_key" "devops-kms-key" {
  key_usage                = "ENCRYPT_DECRYPT"
  customer_master_key_spec = "SYMMETRIC_DEFAULT"

  tags = {
    Name = "devops-kms-key"
  }
}

resource "aws_kms_alias" "alias" {
  name          = "alias/devops-kms-key"
  target_key_id = aws_kms_key.devops-kms-key.id
}

# 2. Read plaintext from SensitiveData.txt
locals {
  sensitive_file_path = "/home/bob/terraform/SensitiveData.txt"
  sensitive_plaintext = file(local.sensitive_file_path)
}

# 3. Encrypt the plaintext using KMS
resource "aws_kms_ciphertext" "encrypted_data" {
  key_id    = aws_kms_key.devops-kms-key.arn
  plaintext = local.sensitive_plaintext
}

# 4. Save ciphertext to EncryptedData.bin (already base64-encoded)
resource "local_file" "encrypted_file" {
  filename = "/home/bob/terraform/EncryptedData.bin"
  content  = aws_kms_ciphertext.encrypted_data.ciphertext_blob
}

# 5. Decrypt the ciphertext to verify using new data source aws_kms_secrets
data "aws_kms_secrets" "decrypted_data" {
  secret {
    name    = "decrypted"
    payload = aws_kms_ciphertext.encrypted_data.ciphertext_blob
  }
}

# 6. Save decrypted data for verification
resource "local_file" "decrypted_file" {
  filename = "/home/bob/terraform/DecryptedData.txt"
  content  = data.aws_kms_secrets.decrypted_data.plaintext["decrypted"]
}

=======================================================================================
outputs.tf

output "kke_kms_key_name" {
  description = "Name of the KMS key created"
  value       = aws_kms_key.devops-kms-key.tags["Name"]
}

====================================================================================

terraform init
terraform apply
terraform plan
