The Nautilus DevOps team has installed and configured new Jenkins server in Stratos DC which they will use for CI/CD and for some automation tasks. There is a requirement to add all app servers as slave nodes in Jenkins so that they can perform tasks on these servers using Jenkins. Find below more details and accomplish the task accordingly.

Click on the Jenkins button on the top bar to access the Jenkins UI. Login using username admin and password Adm!n321.

1. Add all app servers as SSH build agent/slave nodes in Jenkins. Slave node name for app server 1, app server 2 and app server 3 must be App_server_1, App_server_2, App_server_3 respectively.

2. Add labels as below:

App_server_1 : stapp01
App_server_2 : stapp02
App_server_3 : stapp03
3. Remote root directory for App_server_1 must be /home/tony/jenkins, for App_server_2 must be /home/steve/jenkins and for App_server_3 must be /home/banner/jenkins.

4. Make sure slave nodes are online and working properly.

Note:
1. You might need to install some plugins and restart Jenkins service. So, we recommend clicking on Restart Jenkins when installation is complete and no jobs are running on plugin installation/update page i.e update centre. Also, Jenkins UI sometimes gets stuck when Jenkins service restarts in the back end. In this case, please make sure to refresh the UI page.
2. For these kind of scenarios requiring changes to be done in a web UI, please take screenshots so that you can share it with us for review in case your task is marked incomplete. You may also consider using a screen recording software such as loom.com to record and share your work.

‚úÖ Jenkins Slave Node Setup Summary
1. Install Required Plugins

Go to Manage Jenkins ‚Üí Plugin Manager

Install:

SSH Build Agents Plugin

SSH Agent Plugin (for credential injection if needed)

2. Add Global SSH Credentials

Navigate to Manage Jenkins ‚Üí Credentials ‚Üí System ‚Üí Global credentials

Add credentials for:

tony (App_server_1)

steve (App_server_2)

banner (App_server_3)

3. Configure Slave Nodes

Go to Manage Jenkins ‚Üí Nodes ‚Üí New Node

Create nodes with:

Names: App_server_1, App_server_2, App_server_3

Labels: stapp01, stapp02, stapp03

Remote root directories:

/home/tony/jenkins

/home/steve/jenkins

/home/banner/jenkins

Launch method: SSH with appropriate credentials

‚öôÔ∏è Automate Java Installation via Jenkins Job
4. Configure SSH Sites

Go to Manage Jenkins ‚Üí Configure System ‚Üí Publish Over SSH

Add each app server with:

Hostname

Username

SSH credentials

Remote directory (optional)

5. Create Jenkins Job: Install_Java_AgentSetup

Build Step: Execute shell script remotely


# App_server_1
echo Ir0nM@n | sudo -S yum install -y java

Build Step: Execute shell script remotely
# App_server_2
echo Am3ric@ | sudo -S yum install -y java

Build Step: Execute shell script remotely
# App_server_3
echo BigGr33n | sudo -S yum install -y java
Post-build: Validate installation via java -version or agent launch

üöÄ Validation
Relaunch agents from Manage Nodes

Confirm all nodes show Online status

Check System Statistics for each node

Optionally, run a test job using node labels to verify execution
