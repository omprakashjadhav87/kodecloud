Some developers are working on a common repository where they are testing some features for an application. 
They are having three branches (excluding the master branch) in this repository where they are adding changes related to these different features.
They want to test these changes on Stratos DC app servers so they need 
a Jenkins job using which they can deploy these different branches as per requirements. Configure a Jenkins job accordingly.

Click on the Jenkins button on the top bar to access the Jenkins UI. Login using username admin and password Adm!n321.

Similarly, click on Gitea button to access the Gitea page. Login to Gitea server using username sarah and password Sarah_pass123.

There is a Git repository named web_app on Gitea where developers are pushing their changes. It has three branches version1, version2 and version3 (excluding the master branch). 

You need not to make any changes in the repository.

Create a Jenkins job named app-job.

Configure this job to have a choice parameter named Branch with choices as given below:

version1

version2

version3

Configure the job to fetch changes from above mentioned Git repository and make sure it should fetches the changes from the respective branch which you are passing as a choice in the choice parameter while building the job. 
For example if you choose version1 then it must fetch and deploy the changes from branch version1.

Configure this job to use custom workspace rather than a default workspace and custom workspace directory should be created under /var/lib/jenkins (for example /var/lib/jenkins/version1) location rather than under any sub-directory etc. The job should use a workspace as per the value you will pass for Branch parameter while building the job. For example if you choose version1 while building the job then it should create a 

workspace directory called version1 and should fetch Git repository etc within that directory only.

Configure the job to deploy code (fetched from Git repository) on storage server (in Stratos DC) under /var/www/html directory. Since its a shared volume.

Solution:- 

Click Jenkins > Manage Jenkins > Manage Plugins and click Available tab.

You can access the website by clicking on App button.

Solutions:-
Step-by-Step Guide to Configure Jenkins Job

Access Jenkins UI:

Click on the Jenkins button on the top bar.
Login using username admin and password Adm!n321.

Click Jenkins > Manage Jenkins > Manage Plugins and click Available tab.

Search for Git. Select Gitea, SSH & Publish over SSH plugin and click Download now and install after restart

Add the new host key:

Manually SSH into the server to add the new key: ssh natasha@ststor01

Genrate SSH key

ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa

copy ssh id to jenkins server
ssh-copy-id -i ~/.ssh/id_rsa.pub jenkins@jenkins

Create a New Job:

On the Jenkins dashboard, click on New Item.
Enter app-job as the job name.
Select Freestyle project and click OK.

Add Choice Parameter:

In the job configuration page, scroll down to This project is parameterized.
Check the box and click Add Parameter.
Select Choice Parameter.
Name the parameter Branch.
Add choices: version1
version2
version3

Configure Git Repository:
Scroll down to Source Code Management.
Select Git.
Enter the repository URL: go to gita page and copy the app repo http url.
Under Branches to build, enter */$Branch to use the choice parameter.

Set Custom Workspace:

Scroll down to Advanced Project Options.
Check Use custom workspace.
Enter /var/lib/jenkins/$Branch as the custom workspace directory.

Deploy Code to Stratos DC:

Scroll down to Build.
Click Add build step and select Execute shell.
Enter the following script to deploy code:

scp -r * natasha@ststor01:/var/www/html

Save and Build:

lick Save.
To build the job, click Build with Parameters on the job page.
Select the desired branch (version1
version2
or version3)

and click Build.


Accessing the Website:
Click on the App button to access the deployed application version1 ,version2 , version3 
