The Nautilus DevOps team is implementing lifecycle policies to manage object storage efficiently in AWS. They want to create an S3 bucket with a specific lifecycle rule that transitions objects to infrequent
access (IA) storage after 30 days and deletes them after 365 days.

Create an S3 bucket named xfusion-lifecycle-28193.

Enable the S3 Versioning on the bucket.

Add a lifecycle rule named xfusion-lifecycle-rule with:

Transition to STANDARD_IA storage class after 30 days.
Expiration of objects after 365 days.
Use the main.tf file (do not create a separate .tf file) to provision the S3 bucket.

Use the variable name KKE_bucket_name in the outputs.tf file to output the created bucket name.

Notes:

The Terraform working directory is /home/bob/terraform.

Right-click under the EXPLORER section in VS Code and select Open in Integrated Terminal to launch the terminal.

Before submitting the task, ensure that terraform plan returns No changes. Your infrastructure matches the configuration.

Solutions:-

Here's how to implement the S3 Lifecycle Management Policy using Terraform as per the Nautilus DevOps team's requirements:

âœ… main.tf

provider "aws" {
  region = "us-east-1"
}

resource "aws_s3_bucket" "xfusion_bucket" {
  bucket = "xfusion-lifecycle-28193"
}

resource "aws_s3_bucket_versioning" "xfusion_versioning" {
  bucket = aws_s3_bucket.xfusion_bucket.id

  versioning_configuration {
    status = "Enabled"
  }
}

resource "aws_s3_bucket_lifecycle_configuration" "xfusion_lifecycle" {
  bucket = aws_s3_bucket.xfusion_bucket.id

  rule {
    id     = "xfusion-lifecycle-rule"
    status = "Enabled"

    filter {
      prefix = ""
    }

    transition {
      days          = 30
      storage_class = "STANDARD_IA"
    }

    expiration {
      days = 365
    }
  }
}

----------------------------------------------------------

outputs.tf

output "KKE_bucket_name" {
  value = aws_s3_bucket.xfusion_bucket.bucket
}

-------------------------------------------------

ðŸ§ª Validation Steps

Open terminal in /home/bob/terraform.


run

terraform init
terraform apply

---------------------------------------------------
