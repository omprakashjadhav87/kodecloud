The Nautilus DevOps team needs to create an AMI from an existing EC2 instance for backup and scaling purposes. The following steps are required:

They have an existing EC2 instance named xfusion-ec2.

They need to create an AMI named xfusion-ec2-ami from this instance.

Additionally, they need to launch a new EC2 instance named xfusion-ec2-new using this AMI.

Update the main.tf file (do not create a different or separate.tf file) to provision an AMI and then launch an EC2 Instance from that AMI.

Create an outputs.tf file to output the following values:

KKE_ami_id for the AMI ID you created.
KKE_new_instance_id for the EC2 instance ID you created.

Notes:

The Terraform working directory is /home/bob/terraform.

Right-click under the EXPLORER section in VS Code and select Open in Integrated Terminal to launch the terminal.

Before submitting the task, ensure that terraform plan returns No changes. Your infrastructure matches the configuration.




Solutions:-

âœ… main.tf

# Create AMI from the original EC2 instance
resource "aws_ami_from_instance" "xfusion_ami" {
  name               = "xfusion-ec2-ami"
  source_instance_id = aws_instance.xfusion_ec2.id
  depends_on         = [aws_instance.xfusion_ec2]
}

# Launch new EC2 instance from the created AMI
resource "aws_instance" "xfusion_ec2_new" {
  ami                    = aws_ami_from_instance.xfusion_ami.id
  instance_type          = "t2.micro"
  vpc_security_group_ids = ["sg-2bb20919e87675a55"]

  tags = {
    Name = "xfusion-ec2-new"
  }

  depends_on = [aws_ami_from_instance.xfusion_ami]
}

âœ… outputs.tf

output "KKE_ami_id" {
  description = "AMI ID created from xfusion-ec2"
  value       = aws_ami_from_instance.xfusion_ami.id
}

output "KKE_new_instance_id" {
  description = "Instance ID of xfusion-ec2-new"
  value       = aws_instance.xfusion_ec2_new.id
}


ðŸ§ª Final Steps

cd /home/bob/terraform
terraform init
terraform apply
terraform plan

You should see:

No changes. Your infrastructure matches the configuration.
