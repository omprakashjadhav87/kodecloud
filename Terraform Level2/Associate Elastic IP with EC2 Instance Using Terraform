The Nautilus DevOps Team has received a new request from the Development Team to set up a new EC2 instance. This instance will be used to host a new application that requires a stable IP address.
To ensure that the instance has a consistent public IP, an Elastic IP address needs to be associated with it. This setup will help the Development Team to have a reliable and consistent access point for
their application.

Create an EC2 instance named xfusion_ec2 using any Linux AMI like Ubuntu.

Instance type must be t2.micro and associate an Elastic IP address named xfusion_eipwith this instance.

Use the main.tf file (do not create a separate .tf file) to provision the EC2-Instance and Elastic IP.

Use the outputs.tf file and output the instance name using variable KKE_instance_name and the Elastic IP using variable KKE_eip.


Notes:

The Terraform working directory is /home/bob/terraform.

Right-click under the EXPLORER section in VS Code and select Open in Integrated Terminal to launch the terminal.

Before submitting the task, ensure that terraform plan returns No changes. Your infrastructure matches the configuration.

Solutions:-

ðŸ“„ main.tf

resource "aws_instance" "xfusion_ec2" {
  ami           = "ami-0c94855ba95c71c99" # Ubuntu Server 20.04 LTS (us-east-1)
  instance_type = "t2.micro"

  tags = {
    Name = "xfusion-ec2"
  }
}

resource "aws_eip" "xfusion_eip" {
  instance = aws_instance.xfusion_ec2.id
  vpc      = true

  tags = {
    Name = "xfusion-eip"
  }
}

ðŸ“„ outputs.tf

output "KKE_instance_name" {
  value = aws_instance.xfusion_ec2.tags["Name"]
}

output "KKE_eip" {
  value = aws_eip.xfusion_eip.public_ip
}

Initialize Terraform:

terraform init
terraform plan
terraform apply
