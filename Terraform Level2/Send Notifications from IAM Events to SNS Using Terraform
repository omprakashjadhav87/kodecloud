To enable secure inter-service communication, the DevOps team needs to configure access to an SNS topic using IAM roles and policies. The objective is to allow EC2 instances
 to publish messages to the topic using proper permissions and role assumptions. Please complete the following tasks:

Create an SNS topic named datacenter-sns-topic.

Create an IAM role named datacenter-sns-role with EC2 as the trusted entity.

Attach an IAM policy named datacenter-sns-policy that grants permission to publish messages to the SNS topic.

Use the main.tf file (do not create a separate .tf file) to provision the sns-topic, role and policy.

Create the locals.tfwith the following names:

KKE_SNS_TOPIC_NAME:name of the sns topic created.
KKE_ROLE_NAME: name of the role created.
KKE_POLICY_NAME: name of the policy created.
Create the outputs.tf file to the output the following:

The name of the SNS topic using the output variable kke_sns_topic_name.

The name of the role using the output variable kke_role_name.

The name of the policy using the output variable kke_policy_name.


Notes:

The Terraform working directory is /home/bob/terraform.

Right-click under the EXPLORER section in VS Code and select Open in Integrated Terminal to launch the terminal.

Before submitting the task, ensure that terraform plan returns No changes. Your infrastructure matches the configuration.

Solutions:- 

main.tf

provider "aws" {
  region = "us-east-1"
}

resource "aws_sns_topic" "datacenter_sns_topic" {
  name = local.KKE_SNS_TOPIC_NAME
}

resource "aws_iam_role" "datacenter_sns_role" {
  name = local.KKE_ROLE_NAME

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Effect = "Allow"
        Principal = {
          Service = "ec2.amazonaws.com"
        }
        Action = "sts:AssumeRole"
      }
    ]
  })
}

resource "aws_iam_policy" "datacenter_sns_policy" {
  name        = local.KKE_POLICY_NAME
  description = "Allow EC2 to publish to SNS topic"

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Effect = "Allow"
        Action = "sns:Publish"
        Resource = aws_sns_topic.datacenter_sns_topic.arn
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "sns_publish_attach" {
  role       = aws_iam_role.datacenter_sns_role.name
  policy_arn = aws_iam_policy.datacenter_sns_policy.arn
}

===========================================================================

locals.tf

locals {
  KKE_SNS_TOPIC_NAME = "datacenter-sns-topic"
  KKE_ROLE_NAME      = "datacenter-sns-role"
  KKE_POLICY_NAME    = "datacenter-sns-policy"
}

===========================================================================

outputs.tf

output "kke_sns_topic_name" {
  value = aws_sns_topic.datacenter_sns_topic.name
}

output "kke_role_name" {
  value = aws_iam_role.datacenter_sns_role.name
}

output "kke_policy_name" {
  value = aws_iam_policy.datacenter_sns_policy.name
}

==================================================================

Final Steps

terraform init
terraform apply

After provisioning, verify with:
terraform plan

It should return: No changes. Your infrastructure matches the configuration.
