The Nautilus DevOps team is experimenting with Terraform provisioners. Your task is to create an IAM user and use a local-exec provisioner to log a confirmation message.

Create an IAM user named iamuser_mariyam.

Use a local-exec provisioner with the IAM user resource to log the message KKE iamuser_mariyam has been created successfully! to a file called KKE_user_created.log 
under home/bob/terraform.

Create the main.tf file (do not create a separate .tf file) to provision an IAM user.

Use variables.tf file with the following:

KKE_USER_NAME: name of the IAM user.
Use terraform.tfvars to input the name of the IAM user.

Use outputs.tf file with the following:

kke_iam_user_name: name of the IAM user.

Notes:

The Terraform working directory is /home/bob/terraform.

Right-click under the EXPLORER section in VS Code and select Open in Integrated Terminal to launch the terminal.

Before submitting the task, ensure that terraform plan returns No changes. Your infrastructure matches the configuration.

Solutions:-

main.tf (provider + IAM user + localâ€‘exec provisioner)

# IAM user resource
resource "aws_iam_user" "kke_user" {
  name = var.KKE_USER_NAME

  # Local-exec runs at create time and writes the required message to the log file
  provisioner "local-exec" {
    # Use bash to ensure predictable quoting/redirect behavior
    interpreter = ["/bin/bash", "-c"]
    command     = "echo \"KKE ${var.KKE_USER_NAME} has been created successfully!\" > /home/bob/terraform/KKE_user_created.log"
  }
}
=================================

2) variables.tf

variable "KKE_USER_NAME" {
  description = "name of the IAM user."
  type        = string
}

=======================================

3) terraform.tfvars

KKE_USER_NAME = "iamuser_mariyam"

============================================

4) outputs.tf

output "kke_iam_user_name" {
  description = "name of the IAM user."
  value       = var.KKE_USER_NAME
}

==============================================

5) Run it (from /home/bob/terraform)
cd /home/bob/terraform

# Initialize the working directory and provider plugins
terraform init

# Optional but good hygiene
terraform fmt
terraform validate

# Create the IAM user and trigger local-exec
terraform apply -auto-approve


Confirm state matches configuration:
terraform plan
# Expected:
# No changes. Your infrastructure matches the configuration.
