Some of the Nautilus team developers are developing a static website and they want to deploy it on Kubernetes cluster. They want it to be highly available and scalable.
Therefore, based on the requirements, the DevOps team has decided to create a deployment for it with multiple replicas. Below you can find more details about it:
Create a deployment using nginx image with latest tag only and remember to mention the tag i.e nginx:latest. Name it as nginx-deployment. The container should be named
as nginx-container, also make sure replica counts are 3.
Create a NodePort type service named nginx-service. The nodePort should be 30011.
Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.

Ans:- 

Here are the steps to create the Nginx deployment and service on your Kubernetes cluster:

Create the Nginx Deployment:
First, create a YAML file for the deployment:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx-container
        image: nginx:latest


Save this file as nginx-deployment.yaml and apply it using kubectl:
kubectl apply -f nginx-deployment.yaml

Create the NodePort Service:
Next, create a YAML file for the service:
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30011
Save this file as nginx-service.yaml and apply it using kubectl:
kubectl apply -f nginx-service.yaml

These steps will create a deployment named nginx-deployment with 3 replicas of the nginx:latest image, and expose it as a NodePort service named nginx-service on port 30011.
