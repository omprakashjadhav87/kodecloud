The Nautilus development team has completed development of one of the node applications, which they are planning to deploy on a Kubernetes cluster. 
They recently had a meeting with the DevOps team to share their requirements. Based on that, the DevOps team has listed out the exact requirements to deploy the app. 
Find below more details:

Create a deployment using gcr.io/kodekloud/centos-ssh-enabled:node image, replica count must be 2.

Make sure all the pods are in Running state after the deployment.

You can check the application by clicking on NodeApp button on top bar.

You can use any labels as per your choice.

Note: The kubectl on jump_host has been configured to work with the kubernetes cluster.

Solutions:-

 I can help you with that! Here are the steps to deploy your Node app on Kubernetes:

Create the Deployment:

apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-app-deployment
  labels:
    app: node-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: node-app
  template:
    metadata:
      labels:
        app: node-app
    spec:
      containers:
      - name: node-app-container
        image: gcr.io/kodekloud/centos-ssh-enabled:node
        ports:
        - containerPort: 8080
-------
Create the Service:

apiVersion: v1
kind: Service
metadata:
  name: node-app-service
  labels:
    app: node-app
spec:
  type: NodePort
  selector:
    app: node-app
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30012
------------

Apply the configurations:

kubectl apply -f deployment.yaml
kubectl apply -f service.yaml

Verify the pods are running:
kubectl get pods

Check the application: You can click on the NodeApp button on the top bar to verify the application is running correctly.

Feel free to customize the labels as needed.

