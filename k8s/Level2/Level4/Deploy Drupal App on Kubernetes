We need to deploy a Drupal application on Kubernetes cluster. The Nautilus application development team want to setup a fresh Drupal as they will do the installation on
their own. Below you can find the requirements, they have shared with us.

1) Configure a persistent volume drupal-mysql-pv with hostPath = /drupal-mysql-data (/drupal-mysql-data directory already exists on the worker Node i.e jump host), 5Gi of 
storage and ReadWriteOnce access mode.


2) Configure one PersistentVolumeClaim named drupal-mysql-pvc with storage request of 3Gi and ReadWriteOnce access mode.


3) Create a deployment drupal-mysql with 1 replica, use mysql:5.7 image. Mount the claimed PVC at /var/lib/mysql.


4) Create a deployment drupal with 1 replica and use drupal:8.6 image.


4) Create a NodePort type service which should be named as drupal-service and nodePort should be 30095.


5) Create a service drupal-mysql-service to expose mysql deployment on port 3306.


6) Set rest of the configration for deployments, services, secrets etc as per your preferences. At the end you should be able to access the Drupal installation page by clicking on App button.


Note: The kubectl on jump_host has been configured to work with the kubernetes cluster.


Solutions:-

üì¶ 1. Persistent Volume (PV)

apiVersion: v1
kind: PersistentVolume
metadata:
  name: drupal-mysql-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /drupal-mysql-data

----------------------------------------

üì¶ 2. Persistent Volume Claim (PVC)

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drupal-mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---------------------------------------------

üê¨ 3. MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drupal-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drupal-mysql
  template:
    metadata:
      labels:
        app: drupal-mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: drupalpass
        - name: MYSQL_DATABASE
          value: drupaldb
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: drupal-mysql-pvc
------------------------------------------------------

üê¨ 4. MySQL Service

apiVersion: v1
kind: Service
metadata:
  name: drupal-mysql-service
spec:
  selector:
    app: drupal-mysql
  ports:
  - port: 3306
    targetPort: 3306
-------------------------------------------------

üåê 5. Drupal Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: drupal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drupal
  template:
    metadata:
      labels:
        app: drupal
    spec:
      containers:
      - name: drupal
        image: drupal:8.6
        ports:
        - containerPort: 80
        env:
        - name: DRUPAL_DB_HOST
          value: drupal-mysql-service
        - name: DRUPAL_DB_NAME
          value: drupaldb
        - name: DRUPAL_DB_USER
          value: root
        - name: DRUPAL_DB_PASSWORD
          value: drupalpass
--------------------------------------------

üåê 6. Drupal NodePort Service

apiVersion: v1
kind: Service
metadata:
  name: drupal-service
spec:
  type: NodePort
  selector:
    app: drupal
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30095
------------------------------------------------------
all resources apply via

kubectl apply -f
