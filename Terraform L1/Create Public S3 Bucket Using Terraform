As part of the data migration process, the Nautilus DevOps team is actively creating several S3 buckets on AWS. They plan to utilize both private and public S3 buckets to store the relevant data. Given the ongoing migration of other infrastructure to AWS, it is logical to consolidate data storage within the AWS environment as well.

Create a public S3 bucket named nautilus-s3-4794 using Terraform.

Ensure the bucket is accessible publicly once created by setting the proper ACL.

The Terraform working directory is /home/bob/terraform. Create the main.tf file (do not create a different .tf file) to accomplish this task.

Notes:

Create the resources only in the us-east-1 region.
Right-click under the EXPLORER section in VS Code and select Open in Integrated Terminal to launch the terminal.
The name of the S3 bucket should be based on nautilus-s3-4794.
You can use the ACL settings to ensure the bucket is publicly accessible.

Solutions:-
Paste the Following Terraform Configuration:

resource "aws_s3_bucket" "nautilus-s3-4794" {
  bucket = "nautilus-s3-4794"
  acl    = "public-read"
}

resource "aws_s3_bucket_public_access_block" "nautilus-s3-4794" {
  bucket = aws_s3_bucket.nautilus-s3-4794

  block_public_acls       = false
  block_public_policy     = false
  ignore_public_acls      = false
  restrict_public_buckets = false
}


Apply this configration.

terraform init
terraform apply



Note :- restrict_public_buckets - (Optional) Whether Amazon S3 should restrict public bucket policies for this bucket. Defaults to 
false. Enabling this setting does not affect the previously stored bucket policy, except that public and cross-account access within the public bucket policy, including non-public 
delegation to specific accounts, is blocked. When set to true:
Only the bucket owner and AWS Services can access this buckets if it has a public policy.
