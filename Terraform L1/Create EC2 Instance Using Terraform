The Nautilus DevOps team is strategizing the migration of a portion of their infrastructure to the AWS cloud. Recognizing the scale of this undertaking, they have opted to approach the 

migration in incremental steps rather than as a single massive transition. To achieve this, they have segmented large tasks into smaller, more manageable units.

For this task, create an EC2 instance using Terraform with the following requirements:

The name of the instance must be datacenter-ec2.

Use the Amazon Linux ami-0c101f26f147fa7fd to launch this instance.

The Instance type must be t2.micro.

Create a new RSA key named datacenter-kp.

Attach the default (available by default) security group.

The Terraform working directory is /home/bob/terraform. Create the main.tf file (do not create a different .tf file) to provision the instance.

Note: Right-click under the EXPLORER section in VS Code and select Open in Integrated Terminal to launch the terminal.

Solutions:- 

Make sure the file /home/bob/.ssh/id_rsa.pub actually exists. If it doesnâ€™t, you can generate it using:

ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa

Manually place the public key in your Terraform directory
Copy the public key to your Terraform directory:

cp ~/.ssh/id_rsa.pub /home/bob/terraform/datacenter-kp.pub

Then create main.tf like this:

resource "aws_instance" "datacenter-ec2" {
  ami           = "ami-0c101f26f147fa7fd"
  instance_type = "t2.micro"
  key_name      = aws_key_pair.datacenter-kp.key_name

  tags = {
    Name = "datacenter-ec2"
  }
}
