The Nautilus DevOps team is strategizing the migration of a portion of their infrastructure to the AWS cloud. Recognizing the scale of this undertaking, they have opted
to approach the migration in incremental steps rather than as a single massive transition. To achieve this, they have segmented large tasks into smaller, more manageable units.

For this task, create an EC2 instance using Terraform with the following requirements:

The name of the instance must be datacenter-ec2.

Use the Amazon Linux ami-0c101f26f147fa7fd to launch this instance.

The Instance type must be t2.micro.

Create a new RSA key named datacenter-kp.

Attach the default (available by default) security group.

The Terraform working directory is /home/bob/terraform. Create the main.tf file (do not create a different .tf file) to provision the instance.

Note: Right-click under the EXPLORER section in VS Code and select Open in Integrated Terminal to launch the terminal.

Solutions:-

main.tf

resource "aws_key_pair" "datacenter_key" {
  key_name   = "datacenter-kp"
  public_key = file("${path.module}/datacenter-kp.pub")
}

resource "aws_instance" "datacenter_ec2" {
  ami           = "ami-0c101f26f147fa7fd"
  instance_type = "t2.micro"
  key_name      = aws_key_pair.datacenter_key.key_name

  tags = {
    Name = "datacenter-ec2"
  }

  # Attach default security group
  vpc_security_group_ids = [data.aws_security_group.default.id]
}

data "aws_security_group" "default" {
  name   = "default"
  vpc_id = data.aws_vpc.default.id
}

data "aws_vpc" "default" {
  default = true
}


===========================================

Generate RSA Key Pair: Open the integrated terminal in VS Code and run:


ssh-keygen -t rsa -f /home/bob/terraform/datacenter-kp -C "datacenter-kp"

terraform init
terraform apply
terraform plan
