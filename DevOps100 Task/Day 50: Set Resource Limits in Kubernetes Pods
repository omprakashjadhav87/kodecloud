The Nautilus DevOps team has noticed performance issues in some Kubernetes-hosted applications due to resource constraints. To address this, they plan to set limits
on resource utilization. Here are the details:
Create a pod named httpd-pod with a container named httpd-container. Use the httpd image with the latest tag (specify as httpd:latest). Set the following resource limits:

Requests: Memory: 15Mi, CPU: 100m

Limits: Memory: 20Mi, CPU: 100m

Note: The kubectl utility on jump_host is configured to operate with the Kubernetes cluster.

Solutions:- 

To create a pod named httpd-pod with the specified resource limits and requests, you can define a YAML manifest and apply it using kubectl. Here's the complete configuration:

yaml
apiVersion: v1
kind: Pod
metadata:
  name: httpd-pod
spec:
  containers:
  - name: httpd-container
    image: httpd:latest
    resources:
      requests:
        memory: "15Mi"
        cpu: "100m"
      limits:
        memory: "20Mi"
        cpu: "100m"

âœ… Steps to apply this:
Create the YAML file (e.g., httpd-pod.yaml):


nano httpd-pod.yaml
Paste the above content and save.

Apply the configuration:


kubectl apply -f httpd-pod.yaml
Verify the pod status:


kubectl get pod httpd-pod
Check resource settings:


kubectl describe pod httpd-pod
